trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  BUILD_CONFIGURATION: Release
  BUILD_ID: $(Build.BuildId)
  IMAGE_NAME: hannakasai002/scheduler-slack
  FINAL_IMAGE_TAG: latest
  IS_PR_RUN: $[eq(variables['Build.Reason'], 'PullRequest')]

steps:
- script: Echo Build.Reason $(Build.Reason) IS_PR_RUN $(IS_PR_RUN)

- task: Docker@2
  displayName: Log into a docker registry
  inputs:
    containerRegistry: 'docker-hub'
    command: 'login'
    addPipelineData: false
    addBaseImageData: false

- task: Docker@2
  displayName: Restore dependencies
  inputs:
    repository: 'hannakasai002/scheduler-slack'
    command: 'build'
    arguments: '--force-rm -t $(IMAGE_NAME)'
    Dockerfile: '**/restore.Dockerfile'
    buildContext: './Scheduler.Bot'
    tags: 'restore-$(BUILD_ID)'
    addPipelineData: false
    addBaseImageData: false

- task: Docker@2
  displayName: Build the solution
  inputs:
    repository: 'hannakasai002/scheduler-slack'
    command: 'build'
    arguments: '--force-rm -t $(IMAGE_NAME) --build-arg IMAGE_NAME --build-arg BUILD_ID --build-arg BUILD_CONFIGURATION'
    Dockerfile: '**/build.Dockerfile'
    buildContext: './Scheduler.Bot'
    tags: 'build-$(BUILD_ID)'
    addPipelineData: false
    addBaseImageData: false

- task: Docker@2
  displayName: Publish the API
  inputs:
    repository: 'hannakasai002/scheduler-slack'
    command: 'build'
    arguments: '--force-rm -t $(IMAGE_NAME) --build-arg IMAGE_NAME --build-arg BUILD_ID --build-arg BUILD_CONFIGURATION'
    Dockerfile: '**/publish.Dockerfile'
    buildContext: './Scheduler.Bot'
    tags: 'publish-$(BUILD_ID)'
    addPipelineData: false
    addBaseImageData: false
  condition: and(succeeded(), eq(variables.IS_PR_RUN, false))

- task: Docker@2
  displayName: Build the final image
  inputs:
    repository: 'hannakasai002/scheduler-slack'
    command: 'build'
    arguments: '--force-rm -t $(IMAGE_NAME) --build-arg IMAGE_NAME --build-arg BUILD_ID'
    Dockerfile: '**/final.Dockerfile'
    buildContext: './Scheduler.Bot'
    tags: |
      $(FINAL_IMAGE_TAG)
      build-$(BUILD_ID)
    addPipelineData: false
    addBaseImageData: false
  condition: and(succeeded(), eq(variables.IS_PR_RUN, false))

- task: Docker@2
  displayName: Pull the image
  inputs:
    containerRegistry: 'docker-hub'
    repository: 'hannakasai002/scheduler-slack'
    command: 'push'
    tags: |
      $(FINAL_IMAGE_TAG)
      build-$(BUILD_ID)
    addPipelineData: false
    addBaseImageData: false
  condition: and(succeeded(), eq(variables.IS_PR_RUN, false))

- task: Docker@2
  displayName: Log out of a docker registry
  inputs:
    containerRegistry: 'docker-hub'
    command: 'logout'
    addPipelineData: false
    addBaseImageData: false